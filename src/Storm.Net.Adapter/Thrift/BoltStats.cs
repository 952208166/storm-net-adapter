#if !NETSTANDARD13
/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;



public partial class BoltStats : TBase
{

  public Dictionary<string, Dictionary<GlobalStreamId, long>> Acked { get; set; }

  public Dictionary<string, Dictionary<GlobalStreamId, long>> Failed { get; set; }

  public Dictionary<string, Dictionary<GlobalStreamId, double>> Process_ms_avg { get; set; }

  public Dictionary<string, Dictionary<GlobalStreamId, long>> Executed { get; set; }

  public Dictionary<string, Dictionary<GlobalStreamId, double>> Execute_ms_avg { get; set; }

  public BoltStats() {
  }

  public BoltStats(Dictionary<string, Dictionary<GlobalStreamId, long>> acked, Dictionary<string, Dictionary<GlobalStreamId, long>> failed, Dictionary<string, Dictionary<GlobalStreamId, double>> process_ms_avg, Dictionary<string, Dictionary<GlobalStreamId, long>> executed, Dictionary<string, Dictionary<GlobalStreamId, double>> execute_ms_avg) : this() {
    this.Acked = acked;
    this.Failed = failed;
    this.Process_ms_avg = process_ms_avg;
    this.Executed = executed;
    this.Execute_ms_avg = execute_ms_avg;
  }

  public void Read (TProtocol iprot)
  {
    bool isset_acked = false;
    bool isset_failed = false;
    bool isset_process_ms_avg = false;
    bool isset_executed = false;
    bool isset_execute_ms_avg = false;
    TField field;
    iprot.ReadStructBegin();
    while (true)
    {
      field = iprot.ReadFieldBegin();
      if (field.Type == TType.Stop) { 
        break;
      }
      switch (field.ID)
      {
        case 1:
          if (field.Type == TType.Map) {
            {
              Acked = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
              TMap _map45 = iprot.ReadMapBegin();
              for( int _i46 = 0; _i46 < _map45.Count; ++_i46)
              {
                string _key47;
                Dictionary<GlobalStreamId, long> _val48;
                _key47 = iprot.ReadString();
                {
                  _val48 = new Dictionary<GlobalStreamId, long>();
                  TMap _map49 = iprot.ReadMapBegin();
                  for( int _i50 = 0; _i50 < _map49.Count; ++_i50)
                  {
                    GlobalStreamId _key51;
                    long _val52;
                    _key51 = new GlobalStreamId();
                    _key51.Read(iprot);
                    _val52 = iprot.ReadI64();
                    _val48[_key51] = _val52;
                  }
                  iprot.ReadMapEnd();
                }
                Acked[_key47] = _val48;
              }
              iprot.ReadMapEnd();
            }
            isset_acked = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 2:
          if (field.Type == TType.Map) {
            {
              Failed = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
              TMap _map53 = iprot.ReadMapBegin();
              for( int _i54 = 0; _i54 < _map53.Count; ++_i54)
              {
                string _key55;
                Dictionary<GlobalStreamId, long> _val56;
                _key55 = iprot.ReadString();
                {
                  _val56 = new Dictionary<GlobalStreamId, long>();
                  TMap _map57 = iprot.ReadMapBegin();
                  for( int _i58 = 0; _i58 < _map57.Count; ++_i58)
                  {
                    GlobalStreamId _key59;
                    long _val60;
                    _key59 = new GlobalStreamId();
                    _key59.Read(iprot);
                    _val60 = iprot.ReadI64();
                    _val56[_key59] = _val60;
                  }
                  iprot.ReadMapEnd();
                }
                Failed[_key55] = _val56;
              }
              iprot.ReadMapEnd();
            }
            isset_failed = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 3:
          if (field.Type == TType.Map) {
            {
              Process_ms_avg = new Dictionary<string, Dictionary<GlobalStreamId, double>>();
              TMap _map61 = iprot.ReadMapBegin();
              for( int _i62 = 0; _i62 < _map61.Count; ++_i62)
              {
                string _key63;
                Dictionary<GlobalStreamId, double> _val64;
                _key63 = iprot.ReadString();
                {
                  _val64 = new Dictionary<GlobalStreamId, double>();
                  TMap _map65 = iprot.ReadMapBegin();
                  for( int _i66 = 0; _i66 < _map65.Count; ++_i66)
                  {
                    GlobalStreamId _key67;
                    double _val68;
                    _key67 = new GlobalStreamId();
                    _key67.Read(iprot);
                    _val68 = iprot.ReadDouble();
                    _val64[_key67] = _val68;
                  }
                  iprot.ReadMapEnd();
                }
                Process_ms_avg[_key63] = _val64;
              }
              iprot.ReadMapEnd();
            }
            isset_process_ms_avg = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 4:
          if (field.Type == TType.Map) {
            {
              Executed = new Dictionary<string, Dictionary<GlobalStreamId, long>>();
              TMap _map69 = iprot.ReadMapBegin();
              for( int _i70 = 0; _i70 < _map69.Count; ++_i70)
              {
                string _key71;
                Dictionary<GlobalStreamId, long> _val72;
                _key71 = iprot.ReadString();
                {
                  _val72 = new Dictionary<GlobalStreamId, long>();
                  TMap _map73 = iprot.ReadMapBegin();
                  for( int _i74 = 0; _i74 < _map73.Count; ++_i74)
                  {
                    GlobalStreamId _key75;
                    long _val76;
                    _key75 = new GlobalStreamId();
                    _key75.Read(iprot);
                    _val76 = iprot.ReadI64();
                    _val72[_key75] = _val76;
                  }
                  iprot.ReadMapEnd();
                }
                Executed[_key71] = _val72;
              }
              iprot.ReadMapEnd();
            }
            isset_executed = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 5:
          if (field.Type == TType.Map) {
            {
              Execute_ms_avg = new Dictionary<string, Dictionary<GlobalStreamId, double>>();
              TMap _map77 = iprot.ReadMapBegin();
              for( int _i78 = 0; _i78 < _map77.Count; ++_i78)
              {
                string _key79;
                Dictionary<GlobalStreamId, double> _val80;
                _key79 = iprot.ReadString();
                {
                  _val80 = new Dictionary<GlobalStreamId, double>();
                  TMap _map81 = iprot.ReadMapBegin();
                  for( int _i82 = 0; _i82 < _map81.Count; ++_i82)
                  {
                    GlobalStreamId _key83;
                    double _val84;
                    _key83 = new GlobalStreamId();
                    _key83.Read(iprot);
                    _val84 = iprot.ReadDouble();
                    _val80[_key83] = _val84;
                  }
                  iprot.ReadMapEnd();
                }
                Execute_ms_avg[_key79] = _val80;
              }
              iprot.ReadMapEnd();
            }
            isset_execute_ms_avg = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        default: 
          TProtocolUtil.Skip(iprot, field.Type);
          break;
      }
      iprot.ReadFieldEnd();
    }
    iprot.ReadStructEnd();
    if (!isset_acked)
      throw new TProtocolException(TProtocolException.INVALID_DATA);
    if (!isset_failed)
      throw new TProtocolException(TProtocolException.INVALID_DATA);
    if (!isset_process_ms_avg)
      throw new TProtocolException(TProtocolException.INVALID_DATA);
    if (!isset_executed)
      throw new TProtocolException(TProtocolException.INVALID_DATA);
    if (!isset_execute_ms_avg)
      throw new TProtocolException(TProtocolException.INVALID_DATA);
  }

  public void Write(TProtocol oprot) {
    TStruct struc = new TStruct("BoltStats");
    oprot.WriteStructBegin(struc);
    TField field = new TField();
    field.Name = "acked";
    field.Type = TType.Map;
    field.ID = 1;
    oprot.WriteFieldBegin(field);
    {
      oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Acked.Count));
      foreach (string _iter85 in Acked.Keys)
      {
        oprot.WriteString(_iter85);
        {
          oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Acked[_iter85].Count));
          foreach (GlobalStreamId _iter86 in Acked[_iter85].Keys)
          {
            _iter86.Write(oprot);
            oprot.WriteI64(Acked[_iter85][_iter86]);
          }
          oprot.WriteMapEnd();
        }
      }
      oprot.WriteMapEnd();
    }
    oprot.WriteFieldEnd();
    field.Name = "failed";
    field.Type = TType.Map;
    field.ID = 2;
    oprot.WriteFieldBegin(field);
    {
      oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Failed.Count));
      foreach (string _iter87 in Failed.Keys)
      {
        oprot.WriteString(_iter87);
        {
          oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Failed[_iter87].Count));
          foreach (GlobalStreamId _iter88 in Failed[_iter87].Keys)
          {
            _iter88.Write(oprot);
            oprot.WriteI64(Failed[_iter87][_iter88]);
          }
          oprot.WriteMapEnd();
        }
      }
      oprot.WriteMapEnd();
    }
    oprot.WriteFieldEnd();
    field.Name = "process_ms_avg";
    field.Type = TType.Map;
    field.ID = 3;
    oprot.WriteFieldBegin(field);
    {
      oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Process_ms_avg.Count));
      foreach (string _iter89 in Process_ms_avg.Keys)
      {
        oprot.WriteString(_iter89);
        {
          oprot.WriteMapBegin(new TMap(TType.Struct, TType.Double, Process_ms_avg[_iter89].Count));
          foreach (GlobalStreamId _iter90 in Process_ms_avg[_iter89].Keys)
          {
            _iter90.Write(oprot);
            oprot.WriteDouble(Process_ms_avg[_iter89][_iter90]);
          }
          oprot.WriteMapEnd();
        }
      }
      oprot.WriteMapEnd();
    }
    oprot.WriteFieldEnd();
    field.Name = "executed";
    field.Type = TType.Map;
    field.ID = 4;
    oprot.WriteFieldBegin(field);
    {
      oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Executed.Count));
      foreach (string _iter91 in Executed.Keys)
      {
        oprot.WriteString(_iter91);
        {
          oprot.WriteMapBegin(new TMap(TType.Struct, TType.I64, Executed[_iter91].Count));
          foreach (GlobalStreamId _iter92 in Executed[_iter91].Keys)
          {
            _iter92.Write(oprot);
            oprot.WriteI64(Executed[_iter91][_iter92]);
          }
          oprot.WriteMapEnd();
        }
      }
      oprot.WriteMapEnd();
    }
    oprot.WriteFieldEnd();
    field.Name = "execute_ms_avg";
    field.Type = TType.Map;
    field.ID = 5;
    oprot.WriteFieldBegin(field);
    {
      oprot.WriteMapBegin(new TMap(TType.String, TType.Map, Execute_ms_avg.Count));
      foreach (string _iter93 in Execute_ms_avg.Keys)
      {
        oprot.WriteString(_iter93);
        {
          oprot.WriteMapBegin(new TMap(TType.Struct, TType.Double, Execute_ms_avg[_iter93].Count));
          foreach (GlobalStreamId _iter94 in Execute_ms_avg[_iter93].Keys)
          {
            _iter94.Write(oprot);
            oprot.WriteDouble(Execute_ms_avg[_iter93][_iter94]);
          }
          oprot.WriteMapEnd();
        }
      }
      oprot.WriteMapEnd();
    }
    oprot.WriteFieldEnd();
    oprot.WriteFieldStop();
    oprot.WriteStructEnd();
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("BoltStats(");
    __sb.Append(", Acked: ");
    __sb.Append(Acked);
    __sb.Append(", Failed: ");
    __sb.Append(Failed);
    __sb.Append(", Process_ms_avg: ");
    __sb.Append(Process_ms_avg);
    __sb.Append(", Executed: ");
    __sb.Append(Executed);
    __sb.Append(", Execute_ms_avg: ");
    __sb.Append(Execute_ms_avg);
    __sb.Append(")");
    return __sb.ToString();
  }

}
#endif